#!/usr/bin/env python3

import http.server
from subprocess import Popen, PIPE
import urllib.parse
import re
import sys
from threading import Thread
import argparse

arg_parser = argparse.ArgumentParser(description="Block on HTTP until secret inputted")

arg_parser.add_argument('--label', nargs='?', default='Your Secret', help='The label of the secret')
arg_parser.add_argument('--secret', nargs='?', default='Your Secret', help='The name of the secret')
arg_parser.add_argument('--process', nargs='?', default='Your Process', help='The process that is pending user input')
arg_parser.add_argument('--success', nargs='?', default='Success', help='What to display to the user on success')
arg_parser.add_argument('--port', nargs='?', default=80, type=int, help='The port number to listen on')
arg_parser.add_argument('prog', nargs='+')
args = arg_parser.parse_args()

PORT = args.port
CMD = args.prog
SECRET = args.secret
LABEL = args.label
SUCCESS = args.success
PROCESS = args.process

FORM_TEMPLATE = """
<html>
    <head>
        <title>Enter SECRET_NAME to continue boot process</title>
        <meta charset="UTF-8">
    </head>
    <body>
        <h1>Enter SECRET_NAME to continue PROCESS</h1>
        <p>ERROR<p>
        <div id="nojs" style="margin: 2em">
            <p>
                <strong>WARNING:</strong> The Python http.server can only do POST as CGI against the nobody
                user therefore this server uses GET requests.
            </p>
            <p>
                This page will, if you enable JavaScript send the request through an REST API call, however
                you currently have JavaScript turned off
            </p>
            <p>
                If you proceed, your secret will likely be exposed in your history and may be uploaded
                by your web browser to your browser manufacturer (for tab/history syncronization) or
                may be visible to other third party plugins
            <p>
        </div>
        <div style="margin: 2em" id="https">
            <p>
                <strong>WARNING:</strong> You are accessing this page using HTTP which is NOT encrypted.
                Depending on the location of your computer and the server, this may expose your secret
                to third parties.
            </p>
            <p><strong>NOTE:</strong>This also applies to the CURL instructions below.</p>
        </div>
        <div style="margin: 2em">
            <p>
                <strong>WARNING:</strong> Your web browser, depending on the manufacturer and installed
                plugins, is not necessarily a secure environment. If you have any reason to suspect your
                browser is compromised please use CURL:
                <div style="text-align:center; margin: 2em">
                    <code >
                        curl --get --data-urlencode 'secret=YOUR_SECRET'
                        <span id="protocol"></span>//<span id="host"></span>/secret
                    </code>
                </div>
            <p>
        </div>
        <form action="/secret" method="get">
            <label>SECRET_LABEL:</label><br/>
            <textarea name="secret"></textarea><br/>
            <input type="submit">
        </form>
    </body>
    <style>
        code {
            background-color: black;
            color: lightgray;
            padding: 1em;
        }
        code.status_ok {
            color: white;
            background-color: green;
        }
        code.status_err {
            color: white;
            background-color: red;
        }
        code.status_msg {
            color: black;
            background-color: grey;
        }
    </style>
<script>
    document.getElementById("nojs").style.display="none";
    document.getElementById("host").innerText = document.location.host
    document.getElementById("protocol").innerText = document.location.protocol
    if (document.location.protocol == 'https:') {
        document.getElementById("https").style.display="none";
    }
    document.querySelector('input').addEventListener(
        'click',
        function(evt) {
            evt.preventDefault();
            fetch('/secret?secret=' + encodeURIComponent(document.querySelector('textarea').value))
                .then((resp) => {
                    if (resp.status == 200) {
                        document.querySelector('code').innerText="Please enter your secret";
                        document.querySelector('code').classList.remove('status_err');
                        document.querySelector('code').classList.remove('status_ok');
                        document.querySelector('code').classList.add('status_msg');
                        return;
                    }
                    if (resp.status == 201) {
                        document.querySelector('code').classList.remove('status_err');
                        document.querySelector('code').classList.remove('status_msg');
                        document.querySelector('code').classList.add('status_ok');
                        document.querySelector('code').innerText="SUCCESS_MSG";
                        return;
                    }
                    throw new Error("Command returned non-zero");
                })
                .catch((e) => {
                    document.querySelector('code').classList.remove('status_ok');
                    document.querySelector('code').classList.remove('status_msg');
                    document.querySelector('code').classList.add('status_err');
                    document.querySelector('code').innerText=e.message
                });
        }
    );
</script>
"""


def form(secret, label, process, success, error):
    return FORM_TEMPLATE.replace('SECRET_NAME', secret).replace('SECRET_LABEL', label).replace('ERROR', error).replace('SUCCESS_MSG', success).replace('PROCESS', process)


class Unl(http.server.BaseHTTPRequestHandler):
    def do_GET(self):
        kill = False
        status = 200
        error = ''
        body = form(SECRET, LABEL, PROCESS, SUCCESS, error)
        if re.match('^/secret?', self.path):
            status = 403
            secrets = urllib.parse.parse_qs(urllib.parse.urlparse(self.path).query).get('secret') or []
            if len(secrets):
                try:
                    p = Popen(CMD, stdin=PIPE)
                    p.communicate(input=secrets[0].encode())
                    r = p.wait()
                    error = body = 'Command returned status ' + str(r)
                    if r == 0:
                        body = body + ' - SUCCESS!'
                        kill = True
                        status = 201
                except FileNotFoundError:
                    pass
            else:
                body = "No secret supplied"
                status = 200
        self.send_response(status)
        self.send_header("Content-type", "text/html")
        self.end_headers()
        self.wfile.write(body.encode())
        if kill:
            assassin.start()
            sys.exit(0)


assassin = 0
Handler = Unl
httpd = http.server.HTTPServer(("", PORT), Handler)
assassin = Thread(target=httpd.shutdown)
assassin.daemon = True
print("serving at port", PORT)
httpd.serve_forever()
# httpd.shutdown()
httpd.server_close()
sys.exit(0)
